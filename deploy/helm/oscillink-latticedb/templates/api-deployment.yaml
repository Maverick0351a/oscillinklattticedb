apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oscillink-latticedb.fullname" . }}-api
  labels:
    app.kubernetes.io/name: {{ include "oscillink-latticedb.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ .Values.autoscaling.api.minReplicas | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "oscillink-latticedb.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "oscillink-latticedb.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: api
    spec:
      {{- with .Values.api.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: api
          image: "{{ .Values.image.api.repository }}:{{ .Values.image.api.tag }}"
          imagePullPolicy: {{ .Values.image.api.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.api.port }}
              name: http
          env:
            {{- range $k, $v := .Values.api.env }}
            - name: {{ $k }}
              value: "{{ $v }}"
            {{- end }}
            {{- if .Values.redis.enabled }}
            - name: LATTICEDB_RATE_LIMIT_REDIS_URL
              value: "redis://{{ include "oscillink-latticedb.fullname" . }}-redis:{{ .Values.redis.service.port }}"
            {{- end }}
            {{- with .Values.api.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /livez
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources.api | nindent 12 }}
          volumeMounts:
            - name: db-root
              mountPath: /app/latticedb
          {{- with .Values.api.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.api.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: db-root
          {{- if .Values.api.volume.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "oscillink-latticedb.fullname" . }}-db
          {{- else }}
          emptyDir: {}
          {{- end }}
---
{{- if .Values.api.volume.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "oscillink-latticedb.fullname" . }}-db
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: {{ .Values.api.volume.size }}
{{- end }}
